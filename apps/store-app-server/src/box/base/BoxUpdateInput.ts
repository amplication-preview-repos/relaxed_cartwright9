/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  ValidateNested,
  IsNumber,
} from "class-validator";
import { OrderUpdateManyWithoutBoxesInput } from "./OrderUpdateManyWithoutBoxesInput";
import { Type } from "class-transformer";
import { TransactionUpdateManyWithoutBoxesInput } from "./TransactionUpdateManyWithoutBoxesInput";

@InputType()
class BoxUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  content?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isRevealed?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderUpdateManyWithoutBoxesInput,
  })
  @ValidateNested()
  @Type(() => OrderUpdateManyWithoutBoxesInput)
  @IsOptional()
  @Field(() => OrderUpdateManyWithoutBoxesInput, {
    nullable: true,
  })
  orders?: OrderUpdateManyWithoutBoxesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutBoxesInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutBoxesInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutBoxesInput, {
    nullable: true,
  })
  transactions?: TransactionUpdateManyWithoutBoxesInput;
}

export { BoxUpdateInput as BoxUpdateInput };
